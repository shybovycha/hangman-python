import sys

class Game(object):
    MAX_ERRORS = 6

    def __init__(self, dictionary_path):
        self.check_dictionary(dictionary_path)
        self.dictionary = self.parse_dictionary(dictionary_path)
        self.errors = []
        self.guesses = []

    def check_dictionary(self, path):
        pass

    def parse_dictionary(self, path):
        None

    def start(self):
        self.generate_word()

        while True:
            if self.check_endgame():
                break

            self.show_status()

            letter, position = self.ask_for_letter()
            self.guess(letter, position)

    def ask_for_letter(self):

    def show_status(self):
        word = ' '.join(list(self.guesses))

        bad_guesses = "Bad guesses: {0}/{1} [{2}]".format(
            len(self.errors),
            MAX_ERRORS,
            ', '.join(self.errors)
        )
        
        print("""
            Hangman game v {0}

            {1}

            {2}
        """.format(VERSION, bad_guesses, word))

    def generate_word(self):
        self.word = self.dictionary[rand.randint(0, len(self.dictionary) - 1)]
        self.guesses = list('_' * len(self.word))

    def guess(self, letter, position):
        if self.word[position] == letter:
            self.guesses[position] = letter
            return True
        else:
            self.errors.append(letter)
            return False

    def check_endgame(self):
        if len(self.errors) >= MAX_ERRORS:
            self.loose()
            return True
        elif ''.join(self.guesses) == self.word:
            self.win()
            return True
        else:
            return False

    def win(self):
        print("""
            YOU WIN!
        """)

        self.ask_for_restart()

    def loose(self):
        print("""
            YOU LOST!
            The word you were looking for is: %s
        """ % self.word)

        self.ask_for_restart()

    def ask_for_restart(self):
        while True:
            print("Do you want to play again? (Y/n): ")

            ans = raw_input().lower()

            if ans == "y":
                restart = True
                break
            elif ans == "n":
                print("Ok, good bye!\n")
                return
            else:
                print("I did not understand you. Please, enter either Y or N\n")

        start()

if __name__ == "__main__":
    if len(sys.argv) < 1:
        raise "Not enough arguments. Usage: python hangman.py [dictionary_file]"

    game = Game(sys.argv[1])
    game.start()
